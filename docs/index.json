{
  "api/index.html": {
    "href": "api/index.html",
    "title": "API reference | wan24-Crypto-NaCl",
    "keywords": "API reference Choose a type from the left to start browsing."
  },
  "api/wan24.Crypto.NaCl.Bootstrap.html": {
    "href": "api/wan24.Crypto.NaCl.Bootstrap.html",
    "title": "Class Bootstrap | wan24-Crypto-NaCl",
    "keywords": "Class Bootstrap Bootstrapper Inheritance object Bootstrap Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.Crypto.NaCl Assembly: wan24CryptoNaCl.dll Syntax public static class Bootstrap Methods | Edit this page View Source Boot() Boot Declaration public static void Boot()"
  },
  "api/wan24.Crypto.NaCl.KdfArgon2IdAlgorithm.html": {
    "href": "api/wan24.Crypto.NaCl.KdfArgon2IdAlgorithm.html",
    "title": "Class KdfArgon2IdAlgorithm | wan24-Crypto-NaCl",
    "keywords": "Class KdfArgon2IdAlgorithm Argon2id KDF algorithm Inheritance object CryptoAlgorithmBase KdfAlgorithmBase KdfArgon2IdAlgorithm Implements ICryptoAlgorithm IEquatable<CryptoAlgorithmBase> IEquatable<KdfAlgorithmBase> IEquatable<KdfArgon2IdAlgorithm> Inherited Members KdfAlgorithmBase.EnsureDefaultOptions(CryptoOptions) KdfAlgorithmBase.ValidateOptions(string, bool) KdfAlgorithmBase.ToString() KdfAlgorithmBase.GetHashCode() KdfAlgorithmBase.Equals(object) KdfAlgorithmBase.Equals(CryptoAlgorithmBase) KdfAlgorithmBase.Equals(KdfAlgorithmBase) KdfAlgorithmBase.<Clone>$() KdfAlgorithmBase.DefaultOptions KdfAlgorithmBase.DefaultKdfOptions CryptoAlgorithmBase.Name CryptoAlgorithmBase.Value CryptoAlgorithmBase.UsesTpm object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: wan24.Crypto.NaCl Assembly: wan24CryptoNaCl.dll Syntax public sealed record KdfArgon2IdAlgorithm : KdfAlgorithmBase, ICryptoAlgorithm, IEquatable<CryptoAlgorithmBase>, IEquatable<KdfAlgorithmBase>, IEquatable<KdfArgon2IdAlgorithm> Fields | Edit this page View Source ALGORITHM_NAME Algorithm name Declaration public const string ALGORITHM_NAME = \"ARGON2ID\" Field Value Type Description string | Edit this page View Source ALGORITHM_VALUE Algorithm value Declaration public const int ALGORITHM_VALUE = 1 Field Value Type Description int | Edit this page View Source DEFAULT_MEMORY Default memory size (m=46M) Declaration public const long DEFAULT_MEMORY = 47104 Field Value Type Description long | Edit this page View Source DEFAULT_PARALLELISM Default degree of parallelism (p=fixed to 1 currently) Declaration public const int DEFAULT_PARALLELISM = 1 Field Value Type Description int | Edit this page View Source DEFAULT_PASSES Default number of passes (t=1) Declaration public const int DEFAULT_PASSES = 1 Field Value Type Description int | Edit this page View Source DEFAULT_SALT_LEN Default salt bytes length Declaration public const int DEFAULT_SALT_LEN = 16 Field Value Type Description int | Edit this page View Source DISPLAY_NAME Display name Declaration public const string DISPLAY_NAME = \"Argon2id\" Field Value Type Description string | Edit this page View Source MAX_MEMORY Max. memory size Declaration public const long MAX_MEMORY = 4294967295 Field Value Type Description long | Edit this page View Source MAX_PARALLELISM Max. degree of parallelism Declaration public const int MAX_PARALLELISM = 16777215 Field Value Type Description int | Edit this page View Source MAX_PASSES Max. number of passes Declaration public const int MAX_PASSES = 2147483647 Field Value Type Description int Properties | Edit this page View Source DefaultIterations Default number of iterations Declaration public override int DefaultIterations { get; set; } Property Value Type Description int Overrides wan24.Crypto.KdfAlgorithmBase.DefaultIterations | Edit this page View Source DefaultMemoryLimit Default memory limit Declaration public long DefaultMemoryLimit { get; set; } Property Value Type Description long | Edit this page View Source DefaultParallelism Default degree of parallelism Declaration public int DefaultParallelism { get; set; } Property Value Type Description int | Edit this page View Source DisplayName Display name Declaration public override string DisplayName { get; } Property Value Type Description string Overrides wan24.Crypto.CryptoAlgorithmBase.DisplayName | Edit this page View Source Instance Instance Declaration public static KdfArgon2IdAlgorithm Instance { get; } Property Value Type Description KdfArgon2IdAlgorithm | Edit this page View Source IsPostQuantum Is a post quantum algorithm (\"post quantum-safe\")? Declaration public override bool IsPostQuantum { get; } Property Value Type Description bool Overrides wan24.Crypto.CryptoAlgorithmBase.IsPostQuantum | Edit this page View Source MinIterations Minimum number of iterations Declaration public override int MinIterations { get; } Property Value Type Description int Overrides wan24.Crypto.KdfAlgorithmBase.MinIterations | Edit this page View Source MinSaltLength Minimum salt length in bytes Declaration public override int MinSaltLength { get; } Property Value Type Description int Overrides wan24.Crypto.KdfAlgorithmBase.MinSaltLength | Edit this page View Source SaltLength Salt length in bytes Declaration public override int SaltLength { get; } Property Value Type Description int Overrides wan24.Crypto.KdfAlgorithmBase.SaltLength Methods | Edit this page View Source Register() Register the algorithm to the CryptoConfig Declaration public static void Register() | Edit this page View Source Stretch(byte[], int, byte[]?, CryptoOptions?) Stretch a password Declaration public override (byte[] Stretched, byte[] Salt) Stretch(byte[] pwd, int len, byte[]? salt = null, CryptoOptions? options = null) Parameters Type Name Description byte[] pwd Password int len Required password length byte[] salt Salt CryptoOptions options Options Returns Type Description (byte[] Stretched, byte[] Salt) Stretched password and the used salt Overrides KdfAlgorithmBase.Stretch(byte[], int, byte[], CryptoOptions) Implements wan24.Crypto.ICryptoAlgorithm IEquatable<T> IEquatable<T> IEquatable<T>"
  },
  "api/wan24.Crypto.NaCl.KdfArgon2IdOptions.html": {
    "href": "api/wan24.Crypto.NaCl.KdfArgon2IdOptions.html",
    "title": "Class KdfArgon2IdOptions | wan24-Crypto-NaCl",
    "keywords": "Class KdfArgon2IdOptions Argon2id KDF algorithm options Inheritance object KdfArgon2IdOptions Implements IEquatable<KdfArgon2IdOptions> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) Namespace: wan24.Crypto.NaCl Assembly: wan24CryptoNaCl.dll Syntax public sealed record KdfArgon2IdOptions : IEquatable<KdfArgon2IdOptions> Constructors | Edit this page View Source KdfArgon2IdOptions() Constructor Declaration public KdfArgon2IdOptions() | Edit this page View Source KdfArgon2IdOptions(string) Constructor Declaration public KdfArgon2IdOptions(string json) Parameters Type Name Description string json JSON string Properties | Edit this page View Source DefaultMemoryLimit Default memory limit in bytes Declaration public static long DefaultMemoryLimit { get; set; } Property Value Type Description long | Edit this page View Source DefaultParallelism Default degree of parallelism Declaration public static int DefaultParallelism { get; set; } Property Value Type Description int | Edit this page View Source MemoryLimit Memory limit in bytes Declaration [Range(47104, 4294967295)] public long MemoryLimit { get; set; } Property Value Type Description long | Edit this page View Source Parallelism Degree of parallelism Declaration [Range(1, 16777215)] public int Parallelism { get; set; } Property Value Type Description int Methods | Edit this page View Source GetCopy() Get a copy of this instance Declaration public KdfArgon2IdOptions GetCopy() Returns Type Description KdfArgon2IdOptions Instance copy | Edit this page View Source ToString() Returns a string that represents the current object. Declaration public override string ToString() Returns Type Description string A string that represents the current object. Overrides object.ToString() Operators | Edit this page View Source implicit operator KdfArgon2IdOptions?(string?) Cast as options Declaration public static implicit operator KdfArgon2IdOptions?(string? json) Parameters Type Name Description string json JSON string Returns Type Description KdfArgon2IdOptions | Edit this page View Source implicit operator string(KdfArgon2IdOptions) Cast as JSON string Declaration public static implicit operator string(KdfArgon2IdOptions options) Parameters Type Name Description KdfArgon2IdOptions options Options Returns Type Description string | Edit this page View Source implicit operator CryptoOptions(KdfArgon2IdOptions) Cast as wan24.Crypto.CryptoOptions Declaration public static implicit operator CryptoOptions(KdfArgon2IdOptions options) Parameters Type Name Description KdfArgon2IdOptions options Options Returns Type Description CryptoOptions Implements IEquatable<T>"
  },
  "api/wan24.Crypto.NaCl.NaClCryptoAppConfig.html": {
    "href": "api/wan24.Crypto.NaCl.NaClCryptoAppConfig.html",
    "title": "Class NaClCryptoAppConfig | wan24-Crypto-NaCl",
    "keywords": "Class NaClCryptoAppConfig NaCl app configuration (wan24.Core.AppConfig ; should be applied AFTER bootstrapping (wan24.Core.AppConfigAttribute.AfterBootstrap)) Inheritance object AppConfigBase NaClCryptoAppConfig Implements IAppConfig Inherited Members AppConfigBase.SetApplied AppConfigBase.ApplyProperties(bool) AppConfigBase.ApplyPropertiesAsync(bool, CancellationToken) AppConfigBase.Applied object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.Crypto.NaCl Assembly: wan24CryptoNaCl.dll Syntax public class NaClCryptoAppConfig : AppConfigBase, IAppConfig Constructors | Edit this page View Source NaClCryptoAppConfig() Constructor Declaration public NaClCryptoAppConfig() Properties | Edit this page View Source AppliedNaClCryptoConfig Applied TPM crypto app configuration Declaration public NaClCryptoAppConfig? AppliedNaClCryptoConfig { get; protected set; } Property Value Type Description NaClCryptoAppConfig | Edit this page View Source DefaultMemoryLimit Default memory limit in bytes Declaration [Range(47104, 4294967295)] public long? DefaultMemoryLimit { get; set; } Property Value Type Description long? | Edit this page View Source DefaultParallelism Default degree of parallelism Declaration [Range(1, 16777215)] public int? DefaultParallelism { get; set; } Property Value Type Description int? Methods | Edit this page View Source Apply() Apply this app configuration Declaration public override void Apply() Overrides wan24.Core.AppConfigBase.Apply() | Edit this page View Source ApplyAsync(CancellationToken) Apply this app configuration Declaration public override Task ApplyAsync(CancellationToken cancellationToken = default) Parameters Type Name Description CancellationToken cancellationToken Cancellation token Returns Type Description Task Overrides AppConfigBase.ApplyAsync(CancellationToken) Implements wan24.Core.IAppConfig"
  },
  "api/wan24.Crypto.NaCl.NaClHelper.html": {
    "href": "api/wan24.Crypto.NaCl.NaClHelper.html",
    "title": "Class NaClHelper | wan24-Crypto-NaCl",
    "keywords": "Class NaClHelper NaCl helper Inheritance object NaClHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: wan24.Crypto.NaCl Assembly: wan24CryptoNaCl.dll Syntax public static class NaClHelper Methods | Edit this page View Source SetDefaults(in bool) Set the implemented algorithms as defaults Declaration public static void SetDefaults(in bool useCurrentDefaultAsCounterAlgorithms = true) Parameters Type Name Description bool useCurrentDefaultAsCounterAlgorithms Use the current wan24-Crypto defaults as counter algorithms?"
  },
  "api/wan24.Crypto.NaCl.html": {
    "href": "api/wan24.Crypto.NaCl.html",
    "title": "Namespace wan24.Crypto.NaCl | wan24-Crypto-NaCl",
    "keywords": "Namespace wan24.Crypto.NaCl Classes Bootstrap Bootstrapper KdfArgon2IdAlgorithm Argon2id KDF algorithm KdfArgon2IdOptions Argon2id KDF algorithm options NaClCryptoAppConfig NaCl app configuration (wan24.Core.AppConfig ; should be applied AFTER bootstrapping (wan24.Core.AppConfigAttribute.AfterBootstrap)) NaClHelper NaCl helper"
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here! | wan24-Crypto-NaCl",
    "keywords": "Add your introductions here!"
  },
  "index.html": {
    "href": "index.html",
    "title": "wan24-Crypto-NaCl | wan24-Crypto-NaCl",
    "keywords": "wan24-Crypto-NaCl This library adopts NSec to wan24-Crypto and extends the wan24-Crypto library with these algorithms: Algorithm ID Name KDF Argon2id 1 ARGON2ID How to get it This library is available as NuGet package. Usage In case you don't use the wan24-Core bootstrapper logic, you need to initialize the NaCl extension first, before you can use it: wan24.Crypto.NaCl.Bootstrapper.Boot(); This will register the algorithms to the wan24-Crypto library. To set NaCl defaults as wan24-Crypto defaults: NaClHelper.SetDefaults(); Per default the current wan24-Crypto default will be set as counter algorithms to HybridAlgorithmHelper. JSON configuration You could implement a JSON configuration file using the AppConfig logic from wan24-Core, and the NaClCryptoAppConfig. There it's possible to define disabled algorithms, which makes it possible to react to an unwanted algorithm very fast, at any time and without having to update your app, for example. If you use an AppConfig, it could look like this: public class YourAppConfig : AppConfig { public YourAppConfig() : base() { } [AppConfig(AfterBootstrap = true, Priority = 20)] public CryptoAppConfig? Crypto { get; set; } [AppConfig(AfterBootstrap = true, Priority = 10)] public NaClCryptoAppConfig? NaCl { get; set; } } await AppConfig.LoadAsync<YourAppConfig>(); NOTE: A NaClCryptoAppConfig should be applied before a CryptoAppConfig. For this reason the example defines a priority in the AppConfigAttribute. In the config.json in your app root folder: { \"NaCl\":{ ... } } Anyway, you could also place and load a NaClCryptoAppConfig in any configuration which supports using that custom type. Argon2id A simple KDF operation example: (byte[] stretchedPwd, byte[] salt) = KdfArgon2IdAlgorithm.Instance.Stretch(pwd, len: 32); To use Argon2id as default KDF algorithm: KdfHelper.DefaultAlgorithm = KdfArgon2IdAlgorithm.Instance; You may specify Argon2id specific options using the KdfArgon2IdOptions, which cast implicit to/from a JSON string. The default options are the OWASP recommendations (46M memory usage): (byte[] stretchedPwd, byte[] salt) = pwd.Stretch(len: 32, options: new KdfArgon2IdOptions() { // Configure the options here });// KdfArgon2IdOptions cast implicit to CryptoOptions Or when using CryptoOptions: CryptoOptions options = new() { KdfAlgorithm = KdfArgon2IdAlgorithm.ALGORITHM_NAME, KdfIterations = KdfArgon2IdAlgorithm.Instance.DefaultIterations, KdfOptions = new KdfArgon2IdOptions() { // Configure the options here } };"
  }
}